- name: Install NVIDIA driver packages
  community.general.pacman:
    name: "{{ nvidia_packages }}"
    state: present

- name: Create pacman hook
  ansible.builtin.copy:
    dest: /etc/pacman.d/hooks/nvidia.hook
    content: |
      [Trigger]
      Operation=Install
      Operation=Upgrade
      Operation=Remove
      Type=Package
      Target={{ nvidia_driver }}
      Target={{ nvidia_kernels }}

      [Action]
      Description=Updating NVIDIA module in initcpio
      Depends=mkinitcpio
      When=PostTransaction
      NeedsTargets
      Exec=/bin/sh -c 'while read -r trg; do case $trg in linux*) exit 0; esac; done; /usr/bin/mkinitcpio -P'
    owner: root
    group: root
    mode: "0644"

- name: Add nouveau to modprobe blacklist
  ansible.builtin.copy:
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    content: |
      blacklist nouveau
      options nouveau modeset=0
    owner: root
    group: root
    mode: "0644"

- name: Add nvidia power management
  ansible.builtin.copy:
    dest: /etc/modprobe.d/nvidia.conf
    content: |
      options nvidia "NVreg_DynamicPowerManagement=0x02"
    owner: root
    group: root
    mode: "0644"

- name: Get kernels to enable NVIDIA
  ansible.builtin.shell: ls {{ kernels_to_enable_nvidia }}
  register: kernels_nvidia
  changed_when: false

- name: Enable NVIDIA drm modeset for kernels
  ansible.builtin.replace:
    dest: "{{ item }}"
    regexp: ^(options(?!.*\bnvidia-drm.modeset=1\b).*)$
    replace: \1 nvidia-drm.modeset=1
  loop: "{{ kernels_nvidia.stdout_lines }}"
  notify: Rebuild initramfs

- name: Add NVIDIA modules in mkinitcpio.conf
  ansible.builtin.replace:
    path: /etc/mkinitcpio.conf
    regexp: (?<!nvidia nvidia_modeset nvidia_uvm nvidia_drm )btrfs
    replace: nvidia nvidia_modeset nvidia_uvm nvidia_drm btrfs
  notify: Rebuild initramfs

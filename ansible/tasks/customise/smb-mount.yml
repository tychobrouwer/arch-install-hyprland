---
- name: Ask for smb password
  ansible.builtin.pause:
    prompt: "The password for {{ item.name }} (empty for no password)"
    echo: true
  register: smb_password

- name: Create password file
  ansible.builtin.copy:
    dest: "/etc/cifspasswd-{{ item.name }}"
    content: |
      username={{ item.username }}
      password={{ smb_password.user_input }}
    owner: root
    group: root
    mode: "0600"
  when: smb_password.user_input != ""

- name: Create mount directory
  ansible.builtin.file:
    path: "{{ item.destination }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"

- name: Create mount file
  ansible.builtin.copy:
    dest: /etc/systemd/system/{{ item.name }}.mount
    content: |
      [Unit]
      Description={{ item.description }}
      RequiresMountsFor={{ item.destination }}
      Requires=network-online.target {{ 'wg-quick@{{ item.wireguard_needed }}.service' if item.wireguard_needed is defined else '' }}
      After=network-online.target {{ 'wg-quick@{{ item.wireguard_needed }}.service' if item.wireguard_needed is defined else '' }}

      [Mount]
      What={{ item.source }}
      Where={{ item.destination }}
      Type=cifs
      Options=uid={{ user }},gid={{ user }},_netdev,nofail,credentials=/etc/cifspasswd-{{ item.name }}
      TimeoutSec=5
      LazyUnmount=yes
      ForceUnmount=yes

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: "0644"

# - name: Create mount script if ip is reachable
#   ansible.builtin.copy:
#     dest: /usr/local/bin/mount-{{ item.name }}
#     content: |
#       #!/bin/bash
#       if ping -c 1 -W 1 {{ item.source_ip }} &> /dev/null; then
#         systemctl start {{ item.name }}.mount
#       fi
#     owner: root
#     group: root
#     mode: "0755"
#   when: item.source_ip is defined

# - name: Create automount file
#   ansible.builtin.copy:
#     dest: /etc/systemd/system/{{ item.name }}.automount
#     content: |
#       [Unit]
#       Description={{ item.description }}

#       [Automount]
#       Where={{ item.destination }}
#       TimeoutIdleSec=60

#       [Install]
#       WantedBy=multi-user.target
#     owner: root
#     group: root
#     mode: "0644"

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: yes
(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (button
      :onclick "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
      (box
        :class {mutedmic == "true" ? "mutedmic" : "unmutedmic"}
      {mutedmic == "true" ? "ï„±" : "ï„°"})
    )
    (metric
      :class {
      volume == 0 ? "muted"
      : volume < 25 ? "volume25"
      : volume < 50 ? "volume50"
      : volume < 75 ? "volume75"
      : "volume100"
      }
      :label {volume == 0 ? "ðŸ”‡" : volume < 25 ? "ï€¦" : volume < 50 ? "ï€§" : volume < 75 ? "ïš¨" : "ï€¨"}
      :value volume
      :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}% --limit 1.0"
      :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
    )
    (metric
      :class ""
      :label "ï”¸"
      :value {EWW_RAM.used_mem_perc}
      :onchange ""
      :onclick ""
    )
    (metric
      :class ""
      :label "ðŸ’¾"
      :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
      :onchange ""
      :onclick ""
    )
  time))


(defwidget workspaces []
  (box :class "workspaces"
    :orientation "h"
    :space-evenly true
    :halign "start"
    :spacing 10
    (for i in workspaces
      (button :class {activeworkspace == i ? "activeworkspace" : ""}
        :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor ${i}"
        "ï„‘"
      )
    )
  )
)

(defwidget music []
  (box :class "music"
    :orientation "h"
    :space-evenly false
    :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}
  ))


(defwidget metric [class label value onchange onclick]
  (box :orientation "h"
    :class "metric"
    :space-evenly false
    (eventbox
      :onclick onclick
      (box :class class label))
    (scale :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange
    )))

(deflisten music :initial ""
"playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "0.1s"
"scripts/get-volume.sh")

(defpoll mutedmic :interval "0.1s"
"scripts/get-mute.sh")

(defpoll activeworkspace :interval "0.1s"
  "hyprctl activeworkspace | awk -F '[()]' '{print $2}' | xargs")

(defpoll time :interval "10s"
"date '+%H:%M %b %d, %Y'")

(defvar workspaces "[1, 2, 3, 4, 5, 6, 7]")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
    :y "0%"
    :width "100%"
    :height "10px"
  :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))